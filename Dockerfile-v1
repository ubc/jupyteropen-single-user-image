FROM 032401129069.dkr.ecr.ca-central-1.amazonaws.com/jupyterhub:jupyterlab-all
ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in /
CMD ["bash"]
RUN LABEL maintainer=Jupyter Project <jupyter@googlegroups.com>
RUN ARG NB_USER=jovyan
RUN ARG NB_UID=1000
RUN ARG NB_GID=100
RUN SHELL [/bin/bash -o pipefail -c]
RUN USER root
RUN ENV DEBIAN_FRONTEND=noninteractive
RUN RUN |3 NB_USER=jovyan NB_UID=1000 NB_GID=100 /bin/bash -o pipefail -c apt-get update --yes \
    &&     apt-get upgrade --yes \
    &&     apt-get install --yes --no-install-recommends     bzip2     ca-certificates     fonts-liberation     locales     pandoc     run-one     sudo     tini     wget \
    &&     apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    &&     echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
    &&     locale-gen # buildkit
RUN ENV CONDA_DIR=/opt/conda SHELL=/bin/bash NB_USER=jovyan NB_UID=1000 NB_GID=100 LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8
RUN ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin HOME=/home/jovyan
RUN COPY fix-permissions /usr/local/bin/fix-permissions # buildkit
RUN RUN |3 NB_USER=jovyan NB_UID=1000 NB_GID=100 /bin/bash -o pipefail -c chmod a+rx /usr/local/bin/fix-permissions # buildkit
RUN RUN |3 NB_USER=jovyan NB_UID=1000 NB_GID=100 /bin/bash -o pipefail -c sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc \
    &&    echo 'eval "$(command conda shell.bash hook 2> /dev/null)"' >> /etc/skel/.bashrc # buildkit
RUN RUN |3 NB_USER=jovyan NB_UID=1000 NB_GID=100 /bin/bash -o pipefail -c echo "auth requisite pam_deny.so" >> /etc/pam.d/su \
    &&     sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers \
    &&     sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers \
    &&     useradd -l -m -s /bin/bash -N -u "${NB_UID}" "${NB_USER}" \
    &&     mkdir -p "${CONDA_DIR}" \
    &&     chown "${NB_USER}:${NB_GID}" "${CONDA_DIR}" \
    &&     chmod g+w /etc/passwd \
    &&     fix-permissions "${HOME}" \
    &&     fix-permissions "${CONDA_DIR}" # buildkit
RUN USER 1000
RUN ARG PYTHON_VERSION=3.10
RUN RUN |4 NB_USER=jovyan NB_UID=1000 NB_GID=100 PYTHON_VERSION=3.10 /bin/bash -o pipefail -c mkdir "/home/${NB_USER}/work" \
    &&     fix-permissions "/home/${NB_USER}" # buildkit
RUN COPY initial-condarc /opt/conda/.condarc # buildkit
RUN WORKDIR /tmp
RUN RUN |4 NB_USER=jovyan NB_UID=1000 NB_GID=100 PYTHON_VERSION=3.10 /bin/bash -o pipefail -c set -x \
    &&     arch=$(uname -m) \
    &&     if [ "${arch}" = "x86_64" ]; then         arch="64";     fi \
    &&     wget -qO /tmp/micromamba.tar.bz2         "https://micromamba.snakepit.net/api/micromamba/linux-${arch}/latest" \
    &&     tar -xvjf /tmp/micromamba.tar.bz2 --strip-components=1 bin/micromamba \
    &&     rm /tmp/micromamba.tar.bz2 \
    &&     PYTHON_SPECIFIER="python=${PYTHON_VERSION}" \
    &&     if [[ "${PYTHON_VERSION}" == "default" ]]; then PYTHON_SPECIFIER="python"; fi \
    &&     ./micromamba install         --root-prefix="${CONDA_DIR}"         --prefix="${CONDA_DIR}"         --yes         "${PYTHON_SPECIFIER}"         'mamba'         'notebook'         'jupyterhub'         'jupyterlab' \
    &&     rm micromamba \
    &&     mamba list python | grep '^python ' | tr -s ' ' | cut -d ' ' -f 1,2 >> "${CONDA_DIR}/conda-meta/pinned" \
    &&     jupyter notebook --generate-config \
    &&     mamba clean --all -f -y \
    &&     npm cache clean --force \
    &&     jupyter lab clean \
    &&     rm -rf "/home/${NB_USER}/.cache/yarn" \
    &&     fix-permissions "${CONDA_DIR}" \
    &&     fix-permissions "/home/${NB_USER}" # buildkit
RUN EXPOSE map[8888/tcp:{}]
RUN ENTRYPOINT ["tini" "-g" "--"]
RUN CMD ["start-notebook.sh"]
RUN COPY start.sh start-notebook.sh start-singleuser.sh /usr/local/bin/ # buildkit
RUN COPY jupyter_server_config.py /etc/jupyter/ # buildkit
RUN USER root
RUN RUN |4 NB_USER=jovyan NB_UID=1000 NB_GID=100 PYTHON_VERSION=3.10 /bin/bash -o pipefail -c sed -re "s/c.ServerApp/c.NotebookApp/g"     /etc/jupyter/jupyter_server_config.py > /etc/jupyter/jupyter_notebook_config.py \
    &&     fix-permissions /etc/jupyter/ # buildkit
RUN HEALTHCHECK &{["CMD-SHELL" "wget -O- --no-verbose --tries=1 --no-check-certificate     http${GEN_CERT:+s}://localhost:8888${JUPYTERHUB_SERVICE_PREFIX:-/}api || exit 1"] "15s" "3s" "5s" '\x03'}
RUN USER 1000
RUN WORKDIR /home/jovyan
RUN LABEL maintainer=Jupyter Project <jupyter@googlegroups.com>
RUN SHELL [/bin/bash -o pipefail -c]
RUN USER root
RUN RUN /bin/bash -o pipefail -c apt-get update --yes \
    &&     apt-get install --yes --no-install-recommends     git     nano-tiny     tzdata     unzip     vim-tiny     inkscape     openssh-client     less     texlive-xetex     texlive-fonts-recommended     texlive-plain-generic \
    &&     apt-get clean \
    && rm -rf /var/lib/apt/lists/* # buildkit
RUN RUN /bin/bash -o pipefail -c update-alternatives --install /usr/bin/nano nano /bin/nano-tiny 10 # buildkit
RUN USER 1000
RUN LABEL maintainer=Jupyter Project <jupyter@googlegroups.com>
RUN SHELL [/bin/bash -o pipefail -c]
RUN USER root
RUN RUN /bin/bash -o pipefail -c apt-get update --yes \
    &&     apt-get install --yes --no-install-recommends     build-essential     cm-super     dvipng     ffmpeg \
    &&     apt-get clean \
    && rm -rf /var/lib/apt/lists/* # buildkit
RUN USER 1000
RUN RUN /bin/bash -o pipefail -c mamba install --quiet --yes     'altair'     'beautifulsoup4'     'bokeh'     'bottleneck'     'cloudpickle'     'conda-forge::blas=*=openblas'     'cython'     'dask'     'dill'     'h5py'     'ipympl'    'ipywidgets'     'matplotlib-base'     'numba'     'numexpr'     'pandas'     'patsy'     'protobuf'     'pytables'     'scikit-image'     'scikit-learn'     'scipy'     'seaborn'     'sqlalchemy'     'statsmodels'     'sympy'     'widgetsnbextension'    'xlrd' \
    &&     mamba clean --all -f -y \
    &&     fix-permissions "${CONDA_DIR}" \
    &&     fix-permissions "/home/${NB_USER}" # buildkit
RUN WORKDIR /tmp
RUN RUN /bin/bash -o pipefail -c git clone https://github.com/PAIR-code/facets.git \
    &&     jupyter nbextension install facets/facets-dist/ --sys-prefix \
    &&     rm -rf /tmp/facets \
    &&     fix-permissions "${CONDA_DIR}" \
    &&     fix-permissions "/home/${NB_USER}" # buildkit
RUN ENV XDG_CACHE_HOME=/home/jovyan/.cache/
RUN RUN /bin/bash -o pipefail -c MPLBACKEND=Agg python -c "import matplotlib.pyplot" \
    &&     fix-permissions "/home/${NB_USER}" # buildkit
RUN USER 1000
RUN WORKDIR /home/jovyan
RUN LABEL maintainer=Jupyter Project <jupyter@googlegroups.com>
RUN SHELL [/bin/bash -o pipefail -c]
RUN USER root
RUN ARG julia_version=1.7.3
RUN RUN |1 julia_version=1.7.3 /bin/bash -o pipefail -c apt-get update --yes \
    &&     apt-get install --yes --no-install-recommends     fonts-dejavu     gfortran     gcc \
    &&     apt-get clean \
    && rm -rf /var/lib/apt/lists/* # buildkit
RUN ENV JULIA_DEPOT_PATH=/opt/julia JULIA_PKGDIR=/opt/julia JULIA_VERSION=1.7.3
RUN WORKDIR /tmp
RUN RUN |1 julia_version=1.7.3 /bin/bash -o pipefail -c set -x \
    &&     julia_arch=$(uname -m) \
    &&     julia_short_arch="${julia_arch}" \
    &&     if [ "${julia_short_arch}" == "x86_64" ]; then       julia_short_arch="x64";     fi;     julia_installer="julia-${JULIA_VERSION}-linux-${julia_arch}.tar.gz" \
    &&     julia_major_minor=$(echo "${JULIA_VERSION}" | cut -d. -f 1,2) \
    &&     mkdir "/opt/julia-${JULIA_VERSION}" \
    &&     wget -q "https://julialang-s3.julialang.org/bin/linux/${julia_short_arch}/${julia_major_minor}/${julia_installer}" \
    &&     tar xzf "${julia_installer}" -C "/opt/julia-${JULIA_VERSION}" --strip-components=1 \
    &&     rm "${julia_installer}" \
    &&     ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia # buildkit
RUN RUN |1 julia_version=1.7.3 /bin/bash -o pipefail -c mkdir /etc/julia \
    &&     echo "push!(Libdl.DL_LOAD_PATH, \"${CONDA_DIR}/lib\")" >> /etc/julia/juliarc.jl \
    &&     mkdir "${JULIA_PKGDIR}" \
    &&     chown "${NB_USER}" "${JULIA_PKGDIR}" \
    &&     fix-permissions "${JULIA_PKGDIR}" # buildkit
RUN USER 1000
RUN RUN |1 julia_version=1.7.3 /bin/bash -o pipefail -c mamba install --quiet --yes     'r-base'     'r-caret'     'r-crayon'     'r-devtools'     'r-e1071'     'r-forecast'     'r-hexbin'     'r-htmltools'     'r-htmlwidgets'     'r-irkernel'     'r-nycflights13'     'r-randomforest'     'r-rcurl'     'r-rmarkdown'     'r-rodbc'     'r-rsqlite'     'r-shiny'     'r-tidyverse'     'unixodbc' \
    &&     mamba clean --all -f -y \
    &&     fix-permissions "${CONDA_DIR}" \
    &&     fix-permissions "/home/${NB_USER}" # buildkit
RUN RUN |1 julia_version=1.7.3 /bin/bash -o pipefail -c set -x \
    &&     arch=$(uname -m) \
    &&     if [ "${arch}" == "x86_64" ]; then         mamba install --quiet --yes             'rpy2'             'r-tidymodels' \
    &&             mamba clean --all -f -y \
    &&             fix-permissions "${CONDA_DIR}" \
    &&             fix-permissions "/home/${NB_USER}";     fi; # buildkit
RUN RUN |1 julia_version=1.7.3 /bin/bash -o pipefail -c julia -e 'import Pkg; Pkg.update()' \
    &&     julia -e 'import Pkg; Pkg.add("HDF5")' \
    &&     julia -e 'using Pkg; pkg"add IJulia"; pkg"precompile"' \
    &&     mv "${HOME}/.local/share/jupyter/kernels/julia"* "${CONDA_DIR}/share/jupyter/kernels/" \
    &&     chmod -R go+rx "${CONDA_DIR}/share/jupyter" \
    &&     rm -rf "${HOME}/.local" \
    &&     fix-permissions "${JULIA_PKGDIR}" "${CONDA_DIR}/share/jupyter" # buildkit
RUN WORKDIR /home/jovyan
LABEL maintainer=Rahim Khoja <rahim@khoja.ca>
USER root
RUN /bin/bash -o pipefail -c apt-get update \
    &&     apt-get install -y --no-install-recommends     dvipng     ffmpeg     imagemagick     texlive     tk tk-dev     jq     tzdata     curl     wget     unzip     zsh     vim     htop     gfortran \
    &&     ldconfig \
    &&     apt-get autoclean \
    &&     apt-get clean \
    &&     apt-get autoremove
USER jovyan
RUN /bin/bash -o pipefail -c mamba create --yes -n sage sage python=3.9 \
    &&     mamba install --yes "jupyterlab>=3" "ipywidgets>=7.6" \
    &&     mamba install --yes -c conda-forge -c plotly "jupyterlab-drawio"     "plotly"     "jupyterlab-spellchecker"     "jupyter-dash"     "xeus-cling"     "openjdk=11"     "maven"     "ipython-sql"     "jupyterlab-lsp"     "jupyter-lsp-python"     "jupyter_bokeh"
RUN /bin/bash -o pipefail -c R -e 'require(devtools);     install_version("ggiraphExtra", repos = "http://cran.us.r-project.org", quiet = TRUE);     install_version("lisp", version = "0.1", repos = "http://cran.us.r-project.org", quiet = TRUE);     install_version("translate", version = "0.1.2", repos = "http://cran.us.r-project.org", quiet = TRUE)'
RUN /bin/bash -o pipefail -c mamba install --yes -c conda-forge     'r-stargazer'     'r-quanteda'     'r-quanteda.textmodels'     'r-quanteda.textplots'     'r-quanteda.textstats'     'r-caret'     'r-ggiraph'     'r-ggextra'     'r-isocodes'     'r-urltools'     'r-ggthemes'     'r-modelsummary'     'r-nsyllable'     'r-proxyc'     'r-tidytext' \
    &&     mamba clean --all -f -y
RUN /bin/bash -o pipefail -c pip install nbgitpuller     jupyterlab-git     jupyterlab-system-monitor     lckr-jupyterlab-variableinspector     jupyterlab_templates     jupyterlab-code-formatter     nbdime     black     pandas_ta     ccxt     isort     jupyterlab_latex     jupyterlab-github     mitosheet3 \
    &&     pip install jupytext --upgrade
RUN /bin/bash -o pipefail -c npm cache clean --force \
    &&     fix-permissions $CONDA_DIR \
    &&     fix-permissions /home/jovyan
RUN /bin/bash -o pipefail -c jupyter labextension install jupyterlab-plotly \
    &&     jupyter labextension install @jupyter-widgets/jupyterlab-manager plotlywidget \
    &&     jupyter labextension install @techrah/text-shortcuts \
    &&     jupyter labextension install jupyterlab-spreadsheet \
    &&     jupyter labextension install jupyterlab_templates \
    &&     jupyter serverextension enable --py jupyterlab_templates \
    &&     jupyter serverextension enable nbgitpuller --sys-prefix \
    &&     jupyter lab build
USER root
RUN /bin/bash -o pipefail -c npm install -g --unsafe-perm ijavascript \
    && ijsinstall --hide-undefined --install=global
RUN /bin/bash -o pipefail -c npm install -g --unsafe-perm itypescript \
    && its --ts-hide-undefined --install=global
RUN /bin/bash -o pipefail -c wget -O /opt/ijava-kernel.zip https://github.com/SpencerPark/IJava/releases/download/v1.3.0/ijava-1.3.0.zip \
    &&     unzip /opt/ijava-kernel.zip -d /opt/ijava-kernel \
    &&     cd /opt/ijava-kernel \
    &&     python install.py --sys-prefix \
    &&     rm /opt/ijava-kernel.zip
ENV SAGE_ROOT=/opt/conda/envs/sage/
RUN /bin/bash -o pipefail -c /opt/conda/envs/sage/bin/sage -c "install_scripts('/usr/local/bin')" \
    &&     ln -s "/opt/conda/envs/sage/bin/sage" /usr/bin/sage \
    &&     ln -s /usr/bin/sage /usr/bin/sagemath
RUN /bin/bash -o pipefail -c jupyter kernelspec install $(/opt/conda/envs/sage/bin/sage -sh -c 'ls -d /opt/conda/envs/sage/share/jupyter/kernels/sagemath'); exit 0
RUN /bin/bash -o pipefail -c chown -R jovyan:users /home/jovyan \
    &&     chmod -R 0777 /home/jovyan \
    &&     rm -rf /home/jovyan/*
USER jovyan
ENV HOME=/home/jovyan
WORKDIR /home/jovyan
RUN
